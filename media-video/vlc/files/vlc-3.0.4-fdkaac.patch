--- a/modules/codec/fdkaac.c
+++ a/modules/codec/fdkaac.c
@@ -135,7 +135,7 @@ struct encoder_sys_t
 {
     double d_compression_ratio;
     mtime_t i_pts_last;
-    int i_encoderdelay; /* Samples delay introduced by the profile */
+    int i_ndelay; /* Samples delay introduced by the profile */
     int i_frame_size;
     int i_maxoutputsize; /* Maximum buffer size for encoded output */
     HANDLE_AACENCODER handle;
@@ -288,7 +288,7 @@ static int OpenEncoder(vlc_object_t *p_this)
     p_sys->i_maxoutputsize = 768*p_enc->fmt_in.audio.i_channels;
     p_enc->fmt_in.audio.i_bitspersample = 16;
     p_sys->i_frame_size = info.frameLength;
-    p_sys->i_encoderdelay = info.encoderDelay;
+    p_sys->i_ndelay = info.nDelay;
 
     p_enc->fmt_out.i_extra = info.confSize;
     if (p_enc->fmt_out.i_extra) {
@@ -329,7 +329,7 @@ static block_t *EncodeAudio(encoder_t *p_enc, block_t *p_aout_buf)
         p_buffer = (int16_t *)p_aout_buf->p_buffer;
         i_samples = p_aout_buf->i_nb_samples;
         i_pts_out = p_aout_buf->i_pts - (mtime_t)((double)CLOCK_FREQ *
-               (double)p_sys->i_encoderdelay /
+               (double)p_sys->i_ndelay /
                (double)p_enc->fmt_out.audio.i_rate);
         if (p_sys->i_pts_last == 0)
             p_sys->i_pts_last = i_pts_out - (mtime_t)((double)CLOCK_FREQ *

